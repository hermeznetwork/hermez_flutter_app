def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {

    def config = rootProject.extensions.getByName("ext")

    def pathKeystoreDebugProperties = 'sign/keystore_debug.properties'
    def pathKeystoreReleaseProperties = 'sign/hermez_release.properties'

    compileSdkVersion config["compile_sdk"]
    buildToolsVersion config["build_tools"]

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        applicationId config["application_id"]
        minSdkVersion config["min_sdk"]
        targetSdkVersion config["target_sdk"]
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        testInstrumentationRunner config["test_runner"]
    }

    /*packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
    }

    lintOptions {
        quiet true
        abortOnError false
        ignoreWarnings true
        disable 'InvalidPackage' //Some libraries have issues with this.
        disable 'OldTargetApi' //Lint gives this warning but SDK 20 would be Android L Beta.
        disable 'IconDensities' //For testing purpose. This is safe to remove.
        disable 'IconMissingDensityFolder' //For testing purpose. This is safe to remove.
    }*/

    bundle {
        language {
            enableSplit = true
        }
        density {
            enableSplit = true
        }
        abi {
            enableSplit = true
        }
    }

    File debugSignFile = getRootProject().file(pathKeystoreDebugProperties)
    File releaseSignFile = getRootProject().file(pathKeystoreReleaseProperties)
    if (debugSignFile.exists() && releaseSignFile.exists()) {

        Properties debugProperties = new Properties()
        debugProperties.load(new FileInputStream(debugSignFile))

        Properties releaseProperties = new Properties()
        releaseProperties.load(new FileInputStream(releaseSignFile))

        signingConfigs {
            debug {
                storeFile rootProject.file(debugProperties['keystore'])
                storePassword debugProperties['storePassword']
                keyAlias debugProperties['keyAlias']
                keyPassword debugProperties['keyPassword']
            }
            release {
                storeFile rootProject.file(releaseProperties['keystore'])
                storePassword releaseProperties['storePassword']
                keyAlias releaseProperties['keyAlias']
                keyPassword releaseProperties['keyPassword']
            }
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
            shrinkResources false
            minifyEnabled false

        }
        release {
            signingConfig signingConfigs.release
            shrinkResources true
            minifyEnabled true
            //proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    dependencies {
        //api 'com.google.firebase:firebase-ml-vision-image-label-model:22.1.2'
        //api 'com.google.firebase:firebase-ml-vision-face-model:20.0.2'
    }
}

flutter {
    source '../..'
}

dependencies {
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}

apply plugin: 'com.google.gms.google-services'
